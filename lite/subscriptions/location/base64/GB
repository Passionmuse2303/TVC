vless://05519058-d2ac-4f28-9e4a-2b2a1386749e@18.168.185.21:22222?path=/telegram-channel-vlessconfig-ws&security=tls&encryption=none&host=telegram-channel-vlessconfig.sohala.uk&type=ws&sni=telegram-channel-vlessconfig.sohala.uk#🇬🇧GB | 🔴 | vless | @VlessConfig | 18
vless://05519058-d2ac-4f28-9e4a-2b2a1386749e@18.170.254.247:22222?path=/telegram-channel-vlessconfig-ws&security=tls&encryption=none&host=telegram-channel-vlessconfig.sohala.uk&type=ws&sni=telegram-channel-vlessconfig.sohala.uk#🇬🇧GB | 🔴 | vless | @VlessConfig | 19
trojan://telegram-id-privatevpns@13.42.74.220:22222?security=tls&alpn=http/1.1&headerType=none&type=tcp&sni=trojan.burgerip.co.uk#🇬🇧GB | 🟢 | trojan | @PrivateVPNs | 18
trojan://telegram-id-directvpn@35.177.144.162:22222?security=tls&alpn=http/1.1&headerType=none&type=tcp&sni=trojan.burgerip.co.uk#🇬🇧GB | 🟢 | trojan | @DirectVPN | 18
vless://8f05e3ed-3a12-4eff-bf94-368e49340304@87.236.208.189:2052?security=none&encryption=none&host=fararu.com&headerType=http&type=tcp#🇬🇧GB | 🔴 | vless | @DailyV2RY | 117
vless://b614d895-c9ad-48c8-ab67-896ae8601ca6@91.193.58.1:2052?type=ws&path=/?ed=2053&host=穆罕默德侯赛superspeed12.ff2ray.cfd.&security=none#🇬🇧GB | 🔴 | vless | @lrnbymaa | 9
ss://Y2hhY2hhMjAtaWV0Zi1wb2x5MTMwNTpPWjJWbVdSOXBJNzR6b0xzdGV4QWVl@51.140.37.163:34417#🇬🇧GB | 🟢 | ss | @iP_CF | 3