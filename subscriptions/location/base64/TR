vless://cc4d3871-e0ac-4024-b31c-18e630894016@185.17.136.177:2053?mode=gun&security=reality&encryption=none&authority=&pbk=SbVKOEMjK0sIlbwg4akyBg5mL5KZwwB-ed4eEE7YnRc&fp=chrome&spx=/@ELiV2RAY--@ELiV2RAY--@ELiV2RAY--@ELiV2RAY--@ELiV2RAY--@ELiV2RAY--@ELiV2RAY--@ELiV2RAY&type=grpc&serviceName=xyz&sni=cdn.discordapp.com#🇹🇷TR | 🔴 | vless | @EliV2ray | 2
vless://8d002366-cecc-4bf6-b353-ca3a68a1731c@213.217.31.43:8080?mode=gun&security=reality&encryption=none&pbk=mrfbA_MYn7EoNJrtyJp6OjpSxYH-dA78HduJ5UeHiCc&fp=firefox&spx=/&type=grpc&serviceName=@BugFreeNet@BugFreeNet@BugFreeNet@BugFreeNet@BugFreeNet@BugFreeNet@BugFreeNet@BugFreeNet@BugFreeNet@BugFreeNet@BugFreeNet@BugFreeNet@BugFreeNet&sni=discord.com&sid=40aee5a0#🇹🇷TR | 🔴 | vless | @NIM_VPN_ir | 10
vless://cc4d3871-e0ac-4024-b31c-18e630894016@mado3.maghzkadehturky.com.tr:2053?mode=gun&security=reality&encryption=none&pbk=SbVKOEMjK0sIlbwg4akyBg5mL5KZwwB-ed4eEE7YnRc&fp=chrome&type=grpc&serviceName=xyz&sni=cdn.discordapp.com#🇹🇷TR | 🔴 | vless | @proxyymeliii | 7
vless://8d002366-cecc-4bf6-b353-ca3a68a1731c@213.217.31.43:8080?encryption=none&fp=firefox&mode=gun&pbk=mrfbA_MYn7EoNJrtyJp6OjpSxYH-dA78HduJ5UeHiCc&security=reality&serviceName=@BugFreeNet@BugFreeNet@BugFreeNet@BugFreeNet@BugFreeNet@BugFreeNet@BugFreeNet@BugFreeNet@BugFreeNet@BugFreeNet@BugFreeNet@BugFreeNet@BugFreeNet&sid=40aee5a0&sni=discord.com&spx=/&type=grpc#🇹🇷TR | 🔴 | vless | @forwardv2ray | 9